import { Injectable, UnauthorizedException } from '@nestjs/common';
import { JwtService } from '@nestjs/jwt';

@Injectable()
export class UserService {
  private readonly users = [
    { name: 'user1', userName: 'user@2121', password: 'user@i9' }, // Example user
  ];

  constructor(private readonly jwtService: JwtService) {}

  async validateUser(userName: string, password: string): Promise<any> {
    const user = this.users.find(user => user.userName === userName && user.password === password);
    if (user) {
      // User credentials are valid
      return user;
    }
    return null;
  }

  async login(user: any) {
    const payload = { username: user.userName, sub: user.name };
    
    // Generate access token and refresh token
    const accessToken = this.jwtService.sign(payload, { expiresIn: '10m' });
    const refreshToken = this.jwtService.sign(payload, { expiresIn: '20m' });

    return {
      access_token: accessToken,
      refresh_token: refreshToken,
      expires_in: '10m',
      refreshes_in: '20m',
    };
  }
}
